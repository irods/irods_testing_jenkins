<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_PLATFORM_TARGETS</name>
          <description>ubuntu_16,centos_7</description>
          <defaultValue>ubuntu_16,centos_7</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IMAGE_TAG</name>
          <description>Pass the image tag id/name</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IRODS_BUILD_DIR</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_DATABASE_TYPE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IRODS_REPO</name>
          <description></description>
          <defaultValue>https://github.com/irods/irods</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IRODS_COMMITISH</name>
          <description></description>
          <defaultValue>master</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_EXTERNALS_ROOT_DIR</name>
          <description></description>
          <defaultValue>None</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_TEST_PARALLELISM</name>
          <description>The number of tests to run in parallel per OS/Database flavor.</description>
          <defaultValue>4</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>PARAMETER_RUN_UNIT_TESTS</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>PARAMETER_RUN_CORE_TIMING_TESTS</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.77">
    <script>node {
     def build_id = env.BUILD_ID
     print(build_id)
     def output_directory = env.JENKINS_OUTPUT + &apos;/&apos; + env.JOB_NAME + &apos;/&apos; + build_id
     def dockerfile_dir = env.GLOBAL_PARAMETER_DOCKER_REPO
     dir(dockerfile_dir) {
         stage(&apos;Install And Run Tests&apos;) {
             def base_os = PARAMETER_PLATFORM_TARGETS.split(&apos;,&apos;)
             def parallelBranches = [:]
             for(int i = 0; i &lt; base_os.size(); i++) {
                def os = base_os[i]
                def run_cmd = &apos;python run_tests.py -p &apos; + os +
                              &apos; --image_tag &apos; + PARAMETER_IMAGE_TAG +
                              &apos; -b &apos; + build_id +
                              &apos; --test_name_prefix ${BUILD_TAG} &apos; +
                              &apos;--irods_build_dir &apos; + PARAMETER_IRODS_BUILD_DIR +
                              &apos; -o &apos; + output_directory +
                              &apos; --database_type &apos; + PARAMETER_DATABASE_TYPE +
                              &apos; --irods_repo &apos; + PARAMETER_IRODS_REPO +
                              &apos; --irods_commitish &apos; + PARAMETER_IRODS_COMMITISH +
                              &apos; --test_parallelism &apos; + PARAMETER_TEST_PARALLELISM +
                              &apos; --externals_dir &apos; + PARAMETER_EXTERNALS_ROOT_DIR
                if (PARAMETER_RUN_UNIT_TESTS == &quot;false&quot;) {
                    run_cmd = run_cmd + &apos; --skip_unit_tests&apos;
                }
                if (PARAMETER_RUN_CORE_TIMING_TESTS == &quot;true&quot;) {
                    run_cmd = run_cmd + &apos; --run_timing_tests&apos;
                }
                parallelBranches[&quot;${os}&quot;] = {
                    sh run_cmd 
                }
             }
             if (parallelBranches.size() != 0) {
                 parallel(parallelBranches)
             }
         }
     }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>