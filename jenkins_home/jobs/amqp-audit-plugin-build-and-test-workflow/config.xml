<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_PLUGIN_GIT_REPO</name>
          <description></description>
          <defaultValue>https://github.com/irods/irods_rule_engine_plugin_audit_amqp</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_PLUGIN_GIT_COMMITISH</name>
          <description></description>
          <defaultValue>master</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IRODS_BUILD_DIR</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_PLATFORM_TARGETS</name>
          <description>ubuntu_16,centos_7</description>
          <defaultValue>ubuntu_16,centos_7</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IMAGE_TAG</name>
          <description>this is either the job id or the tag for the base os images</description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_DATABASE_TYPE</name>
          <description></description>
          <defaultValue>postgres</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.77">
    <script>node {
    def build_id = env.BUILD_ID
    def buildOutputDirectory = env.JENKINS_OUTPUT + &apos;/build_plugins_on_base/&apos; + PARAMETER_IMAGE_TAG
    def message_brokers = [&apos;apache-activemq-5.13.2&apos;,&apos;apache-activemq-5.14.1&apos;,&apos;rabbitmq&apos;]
    def parallelTestBranches = [:]
    stage(&quot;Build Plugins on Base OS&quot;) {
        b = build job: &quot;build_plugins_on_base&quot;,
            parameters: [
                [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLATFORM_TARGETS&apos;, value: PARAMETER_PLATFORM_TARGETS], 
                [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_IMAGE_TAG&apos;, value: PARAMETER_IMAGE_TAG],
                [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLUGIN_GIT_REPO&apos;, value: PARAMETER_PLUGIN_GIT_REPO],
                [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLUGIN_GIT_COMMITISH&apos;, value: PARAMETER_PLUGIN_GIT_COMMITISH],
                [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_IRODS_BUILD_DIR&apos;, value: PARAMETER_IRODS_BUILD_DIR]
            ]
        print(buildOutputDirectory)
    }
    stage(&apos;Install and Run Plugin Tests&apos;) {    
        print(buildOutputDirectory)
        for (int k = 0; k &lt; message_brokers.size(); k++) {
            def the_message_broker = message_brokers.get(k)
            def passThruArgs = &apos;--message_broker &apos; + the_message_broker
            parallelTestBranches[&quot;${the_message_broker}&quot;] = {
                b = build job: &quot;run_plugin_tests&quot;,
                parameters: [
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLATFORM_TARGETS&apos;, value: PARAMETER_PLATFORM_TARGETS], 
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_IMAGE_TAG&apos;, value: PARAMETER_IMAGE_TAG],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLUGIN_GIT_REPO&apos;, value: PARAMETER_PLUGIN_GIT_REPO],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLUGIN_GIT_COMMITISH&apos;, value: PARAMETER_PLUGIN_GIT_COMMITISH],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_IRODS_BUILD_DIR&apos;, value: PARAMETER_IRODS_BUILD_DIR],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_PLUGIN_BUILD_DIR&apos;, value: buildOutputDirectory],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_DATABASE_TYPE&apos;, value: PARAMETER_DATABASE_TYPE],
                    [$class: &apos;StringParameterValue&apos;, name: &apos;PARAMETER_ADDITIONAL_PASSTHRU_ARGS&apos;, value: passThruArgs]
                ]    
            }
        }
        parallel(parallelTestBranches)
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>