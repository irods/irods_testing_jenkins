<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_PLATFORM_TARGETS</name>
          <description>ubuntu_16,centos_7</description>
          <defaultValue>ubuntu_16,centos_7</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARAMETER_IMAGE_TAG</name>
          <description>Pass the parent job id or the container image tag number/name</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.77">
    <script>node {
     def build_id = env.BUILD_ID
     if(!PARAMETER_IMAGE_TAG.equals(&apos;&apos;)) {
         build_id = PARAMETER_IMAGE_TAG
     }
     print(build_id)
     def dockerfile_dir = env.GLOBAL_PARAMETER_DOCKER_REPO
     print(dockerfile_dir)
     dir(dockerfile_dir) {
         stage(&apos;OS Build&apos;) {
             def os_to_build = PARAMETER_PLATFORM_TARGETS.split(&apos;,&apos;)
             def parallelBranches = [:]
             for(int i = 0; i &lt; os_to_build.size(); i++) {
                def os = os_to_build[i]
                def build_cmd = &apos;python build_os.py -p &apos; + os + &apos; -b &apos; + build_id 
                parallelBranches[&quot;${os}&quot;] = {
                    sh build_cmd 
                }
             }
             if (parallelBranches.size() != 0) {
                 parallel(parallelBranches)
             }
         }
     }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>