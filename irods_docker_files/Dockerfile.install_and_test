ARG base_image=ubuntu:16.04
FROM $base_image

ENV DEBIAN_FRONTEND=noninteractive

ARG database_type="postgres"
ENV DATABASE=$database_type

# install stuff we need to install stuff
RUN { \
        apt-get update && \
        apt-get install -y --no-install-recommends apt-utils && \
        apt-get install -y \
            curl \
            ca-certificates \
        && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* /tmp/* ; \
    } || \
    { \
        yum install -y ca-certificates && \
        yum install -y epel-release && \
        yum install -y curl && \
        yum clean all && \
        rm -rf /var/cache/yum /tmp/* ; \
    }

# python stuff
RUN { \
        { \
            apt-get update && \
            apt-get install -y python-pip && \
            apt-get clean && \
            rm -rf /var/lib/apt/lists/* /tmp/* ; \
        } || \
        { \
            yum install -y python-pip && \
            yum clean all && \
            rm -rf /var/cache/yum /tmp/* ; \
        } ; \
    } && \
    python -m pip --no-cache-dir install --upgrade "pip<21.0" && \
    python -m pip --no-cache-dir install xmlrunner PyJWT

ARG arg_jenkins_ouput=/worm_hole_missing
ENV JENKINS_OUTPUT=${arg_jenkins_output}

ADD setup_database_client.py /
RUN chmod u+x /setup_database_client.py

ADD install_externals.py /
RUN chmod u+x /install_externals.py

COPY ci_utilities.py /

RUN echo export IRODS_ENABLE_TEST_MODE="1" > /etc/profile.d/irods.sh
RUN chmod 644 /etc/profile.d/irods.sh

ADD install_and_test.py /
RUN chmod u+x /install_and_test.py

VOLUME ["/sys/fs/cgroup"]
CMD ["/sbin/init"]
